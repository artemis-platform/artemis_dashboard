### Artemis

# Secrets
#
# Generate a secret key using command:
#
#   $ cd apps/artemis_web && mix guardian.gen.secret
#
# Copy the output below and uncomment env variable:
#
# ARTEMIS_GUARDIAN_KEY=
# ARTEMIS_SECRET_KEY=

# Users
#
# ARTEMIS_ROOT_USER=
# ARTEMIS_ROOT_EMAIL=
#
# ARTEMIS_SYSTEM_USER=SystemUser
# ARTEMIS_SYSTEM_EMAIL=system@artemis.dev

# Database

ARTEMIS_POSTGRES_USER=postgres
ARTEMIS_POSTGRES_PASS=postgres
ARTEMIS_POSTGRES_HOST=localhost
ARTEMIS_POSTGRES_PORT=5432
ARTEMIS_POSTGRES_DB=artemis
ARTEMIS_POSTGRES_SSL_ENABLED=false

# Server

ARTEMIS_CLUSTER_NODES=artemis01@0.0.0.0,artemis02@0.0.0.0

# Logging

# Set the default number of debugging log entries for long-running processes
# that do actions on a predetermined interval. Log values are transient and
# held in memory. Each log entry contains detailed debugging information.
#
# The recomended value is 10. Higher values may cause performance issues.
#
ARTEMIS_INTERVAL_WORKER_DEFAULT_LOG_LIMIT=10
ARTEMIS_INTERVAL_WORKER_DEFAULT_LOG_LEVEL=info
ARTEMIS_BENCHMARK_DEFAULT_LOG_LEVEL=info

# Actions
#
# Enable actions depending on deployment environment (e.g. development, demo,
# qa, test, production).
#
ARTEMIS_ACTION_REPO_DELETE_ALL_ENABLED=false
ARTEMIS_ACTION_REPO_GENERATE_FILLER_DATA_ENABLED=false
ARTEMIS_ACTION_REPO_RESET_ON_INTERVAL_ENABLED=false
ARTEMIS_ACTION_REPO_RESET_ON_INTERVAL_HOURS=24

### Artemis API

ARTEMIS_API_HOSTNAME=artemis.test
ARTEMIS_API_PORT=4078

### Artemis Log

# Database

ARTEMIS_LOG_POSTGRES_USER=postgres
ARTEMIS_LOG_POSTGRES_PASS=postgres
ARTEMIS_LOG_POSTGRES_HOST=localhost
ARTEMIS_LOG_POSTGRES_PORT=5432
ARTEMIS_LOG_POSTGRES_DB=artemis_log
ARTEMIS_LOG_POSTGRES_SSL_ENABLED=false

# Logging

# Set the default number of debugging log entries for long-running processes
# that do actions on a predetermined interval. Log values are transient and
# held in memory. Each log entry contains detailed debugging information.
#
# The recomended value is 10. Higher values may cause performance issues.
#
ARTEMIS_LOG_INTERVAL_WORKER_DEFAULT_LOG_LIMIT=10

# Actions

ARTEMIS_LOG_ACTION_DELETE_EVENT_LOGS_ON_INTERVAL_ENABLED=true
ARTEMIS_LOG_ACTION_DELETE_EVENT_LOGS_ON_INTERVAL_MAX_DAYS=270
ARTEMIS_LOG_ACTION_DELETE_HTTP_REQUEST_LOGS_ON_INTERVAL_ENABLED=false
ARTEMIS_LOG_ACTION_DELETE_HTTP_REQUEST_LOGS_ON_INTERVAL_MAX_DAYS=30
ARTEMIS_LOG_ACTION_SUBSCRIBE_TO_EVENTS_ENABLED=true
ARTEMIS_LOG_ACTION_SUBSCRIBE_TO_HTTP_REQUESTS_ENABLED=false

### Artemis Web

# Enabled Auth Providers
#
# Takes a list of providers: provider1,provider2
#
# Available providers:
#
# 	- `system_user` WARNING: development only! Enables anyone to directly log in as system user.
# 	- `github`
#
# For additional providers, see the List of UeberAuth Strategies:
# https://github.com/ueberauth/ueberauth/wiki/List-of-Strategies
#
ARTEMIS_WEB_ENABLED_AUTH_PROVIDERS=github,system_user
ARTEMIS_WEB_HOSTNAME=artemis.test
ARTEMIS_WEB_PORT=4077

# If using `github` auth provider, follow the GitHub directions to generate
# credentials: https://developer.github.com/apps/building-oauth-apps/
#
# Then update with values from GitHub:
#
ARTEMIS_WEB_GITHUB_CLIENT_ID=
ARTEMIS_WEB_GITHUB_CLIENT_SECRET=

### Elixir Version

# Uncomment if using kiex
# ELIXIR_VERSION=1.8.1
# PATH=${HOME}/.kiex/elixirs/elixir-1.8.1/bin:${PATH}
# MIX_ARCHIVES=${HOME}/.kiex/mix/archives/elixir-1.8.1

### NodeJS Version

NODE_ENV=development

# Uncomment if using nvm
# NODE_VERSION=10.13.0
# PATH=${HOME}/.nvm/versions/node/v${NODE_VERSION}/bin:${PATH}

### Docker

# Uncomment if using docker
# ARTEMIS_POSTGRES_HOST=postgres
# ARTEMIS_LOG_POSTGRES_HOST=postgres
